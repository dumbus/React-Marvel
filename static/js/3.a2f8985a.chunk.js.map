{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","View","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemsLoading","setNewItemsLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemsRefs","useRef","focusOnItem","number","current","forEach","item","classList","remove","add","focus","arr","i","tabIndex","ref","el","onKeyPress","e","key","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","skeleton","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","setSelectedChar","decoration"],"mappings":"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","file":"static/js/3.a2f8985a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt={'error'}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n};\r\n\r\nexport default useHttp;","import useHttp from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=67a79caa2e2acc912a2edf25bb515f26';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        \r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n\t\treturn _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description || 'No description',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'No description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about page count',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'Not available'\r\n\t\t}\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        clearError\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n    const [char, setChar] = useState({});\r\n\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n\r\n        const timerId = setInterval(updateChar, 10000);\r\n\r\n        return () => {\r\n            clearInterval(timerId);\r\n        }\r\n    }, []);\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n        clearError();\r\n        \r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\r\n        getCharacter(id).then(onCharLoaded)\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\">\r\n                    <div className=\"inner\" onClick={updateChar}>try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const { name, description, thumbnail, homepage, wiki } = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (\r\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \r\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\r\n    ) {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n        <div className=\"randomchar__info\">\r\n            <p className=\"randomchar__name\">{name}</p>\r\n            <p className=\"randomchar__descr\">{description}</p>\r\n            <div className=\"randomchar__btns\">\r\n                <a href={homepage} className=\"button button__main\">\r\n                    <div className=\"inner\">homepage</div>\r\n                </a>\r\n                <a href={wiki} className=\"button button__secondary\">\r\n                    <div className=\"inner\">Wiki</div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default RandomChar;","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n\r\n    const { loading, error, getAllCharacters } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, []);\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\r\n        getAllCharacters(offset).then(onCharListLoaded)\r\n    };\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) ended = true;\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setNewItemsLoading(newItemsLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setCharEnded(charEnded => ended);\r\n    };\r\n\r\n    const itemsRefs = useRef([]);\r\n\r\n    const focusOnItem = (number) => {\r\n        itemsRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemsRefs.current[number].classList.add('char__item_selected');\r\n        itemsRefs.current[number].focus();\r\n    };\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (\r\n                item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \r\n                item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\r\n            ) {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    tabIndex={0}\r\n                    ref={el => itemsRefs.current[i] = el}\r\n                    className=\"char__item\"\r\n                    key={item.id}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === 'Enter') {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i);\r\n                        }\r\n                    }}\r\n                    onClick={() => {\r\n                        props.onCharSelected(item.id);\r\n                        focusOnItem(i);\r\n                    }}>    \r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n        \r\n    const items = renderItems(charList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemsLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemsLoading}\r\n                style={{display : charEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Skeleton from '../skeleton/Skeleton';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n    const [char, setChar] = useState(null);\r\n\r\n    const { loading, error, getCharacter, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [props.charId]);\r\n\r\n    const updateChar = () => {\r\n        const { charId } = props;\r\n\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        clearError();\r\n        getCharacter(charId).then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const skeleton = char || loading || error ? null : <Skeleton />;\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (\r\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \r\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\r\n    ) {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">{description}</div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length > 0 ? null : 'There are no comics with this character'}\r\n                {\r\n                    comics.map((item, i) => {\r\n                        // eslint-disable-next-line\r\n                        if (i > 9) return;\r\n\r\n                        return (\r\n                            <li className=\"char__comics-item\" key={i}>\r\n                                {item.name}\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react/cjs/react.production.min\";\r\n\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setSelectedChar(id);\r\n    };\r\n\r\n  return (\r\n    <>\r\n        <ErrorBoundary>\r\n            <RandomChar/>\r\n        </ErrorBoundary>\r\n        <div className=\"char__content\">\r\n            <ErrorBoundary>\r\n                <CharList onCharSelected={onCharSelected}/>\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n                <CharInfo charId={selectedChar}/>\r\n            </ErrorBoundary>\r\n        </div>\r\n        <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}