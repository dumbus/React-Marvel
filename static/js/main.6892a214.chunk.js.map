{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/errorBoundary/ErrorBoundary.js","components/appHeader/AppHeader.js","components/spinner/Spinner.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","AppHeader","className","href","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","loading","marvelService","onCharLoaded","onCharLoading","onError","updateChar","Math","floor","random","then","catch","errorMessage","spinner","content","onClick","mjolnir","View","imgStyle","CharList","charList","newItemsLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","itemsRefs","setRef","ref","push","focusOnItem","number","forEach","item","classList","remove","add","focus","arr","i","tabIndex","onKeyPress","e","key","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","length","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAAe,MAA0B,kC,OCQ1BA,EANM,WACjB,OACI,qBAAKC,MAAO,CAACC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UAAWC,IAAKC,EAAKC,IAAK,WCqBjHC,EArBI,iKAGd,OAHc,oCACfC,MAAQ,CACJC,OAAO,GACV,EAeA,OAfA,8CAED,SAAkBA,EAAOC,GACrBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CACVL,OAAO,MAEd,oBAED,WACI,OAAII,KAAKL,MAAMC,MACJ,cAAC,EAAY,IAGjBI,KAAKE,MAAMC,aACrB,EAlBc,CAASC,aCiBbC,G,MAnBG,WACd,OACI,yBAAQC,UAAU,cAAa,UAC3B,oBAAIA,UAAU,aAAY,SACtB,oBAAGC,KAAK,IAAG,UACP,0CAAmB,2BAG3B,qBAAKD,UAAU,YAAW,SACtB,+BACI,6BAAI,mBAAGC,KAAK,IAAG,0BAAoB,IAEnC,6BAAI,mBAAGA,KAAK,IAAG,gCCkDpBC,EAhEC,WACZ,OACI,sBAAKC,MAAM,6BAA6BxB,MAAO,CAACK,OAAQ,SAAUoB,WAAY,OAAQxB,QAAS,SAAUC,MAAM,QAAQC,OAAO,QAAQuB,QAAQ,cAAcC,oBAAoB,WAAU,UACtL,mBAAGC,UAAU,mBAAkB,SAC/B,mBAAGA,UAAU,YAAW,SACxB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,IAAG,UAC1D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAgD,SACjE,mBAAGA,UAAU,aAAY,SACzB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,mBAAkB,SACnC,mBAAGA,UAAU,aAAY,SACzB,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC7D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAiD,SAClE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,QAAQC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAChI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,iBAGrG,mBAAGR,UAAU,kCAAiC,SAClD,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,MAAK,UAC5D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,kDAAiD,SAClE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,SAASC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eACjI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kBAGrG,mBAAGR,UAAU,kCAAiC,SAClD,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,OAAM,UAC7D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,UAAUC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAClI,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,mBAGrG,mBAAGR,UAAU,iDAAgD,SACjE,mBAAGA,UAAU,cAAa,SAC1B,yBAAQC,GAAG,IAAIC,GAAG,IAAIC,EAAE,IAAIC,KAAK,UAAUC,YAAY,QAAO,UAC9D,kCAAkBC,cAAc,YAAYC,KAAK,QAAQC,MAAM,KAAKC,OAAO,cAAcC,SAAS,MAAMC,IAAI,KAAKC,YAAY,eAC7H,yBAASN,cAAc,cAAcI,SAAS,MAAMC,IAAI,KAAKC,YAAY,aAAaH,OAAO,MAAMD,MAAM,kB,uBCftGK,EAzCI,iDACfC,SAAW,4CAA4C,KACvDC,QAAU,0CAA0C,KACpDC,YAAc,IAAI,KAGlBC,YAAW,uCAAG,WAAOC,GAAG,uFACJC,MAAMD,GAAK,KAAD,EAAnB,IAAHE,EAAG,QAEEC,GAAG,CAAD,qBACD,IAAIC,MAAM,mBAAD,OAAoBJ,EAAG,qBAAaE,EAAIG,SAAU,KAAD,kBAGvDH,EAAII,OAAO,KAAD,8EAC1B,mDARU,GAQV,KAEDC,iBAAgB,sBAAG,0CAAAC,EAAA,sDAAgC,OAAzBC,EAAM,+BAAG,EAAKX,YAAW,SAC7B,EAAKC,YAAY,GAAD,OAAI,EAAKH,SAAQ,qCAA6Ba,EAAM,YAAI,EAAKZ,UAAW,KAAD,EAAhG,OAAHK,EAAG,yBAEFA,EAAIQ,KAAKC,QAAQC,IAAI,EAAKC,sBAAoB,2CACxD,KAEDC,aAAY,uCAAG,WAAOC,GAAE,uFACF,EAAKhB,YAAY,GAAD,OAAI,EAAKH,SAAQ,sBAAcmB,EAAE,YAAI,EAAKlB,UAAW,KAAD,EAA7E,OAAHK,EAAG,yBAEF,EAAKW,oBAAoBX,EAAIQ,KAAKC,QAAQ,KAAG,2CACvD,mDAJW,GAIX,KAEDE,oBAAsB,SAACG,GACnB,MAAO,CACHD,GAAIC,EAAKD,GACTE,KAAMD,EAAKC,KACXC,YAAaF,EAAKE,aAAe,oCACjCC,UAAU,GAAD,OAAKH,EAAKG,UAAUC,KAAI,YAAIJ,EAAKG,UAAUE,WACpDC,SAAUN,EAAKO,KAAK,GAAGvB,IACvBwB,KAAMR,EAAKO,KAAK,GAAGvB,IACnByB,OAAQT,EAAKS,OAAOC,SCpCjB,G,MAAA,IAA0B,qCCQnCC,EAAU,iKAwCX,OAxCW,oCACZ/D,MAAQ,CACJoD,KAAM,GACNY,SAAS,EACT/D,OAAO,GACV,EAEDgE,cAAgB,IAAIlC,EAAgB,EAMpCmC,aAAe,SAACd,GACZ,EAAK9C,SAAS,CACV8C,OACAY,SAAS,KAEhB,EAEDG,cAAgB,WACZ,EAAK7D,SAAS,CACV0D,SAAS,KAEhB,EAEDI,QAAU,WACN,EAAK9D,SAAS,CACV0D,SAAS,EACT/D,OAAO,KAEd,EAEDoE,WAAa,WACT,IAAMlB,EAAKmB,KAAKC,MAAmB,IAAbD,KAAKE,SAAiC,QAE5D,EAAKL,gBACL,EAAKF,cAAcf,aAAaC,GAC3BsB,KAAK,EAAKP,cACVQ,MAAM,EAAKN,UACnB,EA6BA,OA7BA,8CA/BD,WACI/D,KAAKgE,eACR,oBA+BD,WACI,MAAiChE,KAAKL,MAA9BoD,EAAI,EAAJA,KAAMY,EAAO,EAAPA,QAAS/D,EAAK,EAALA,MAEjB0E,EAAe1E,EAAQ,cAAC,EAAY,IAAM,KAC1C2E,EAAUZ,EAAU,cAAC,EAAO,IAAM,KAClCa,EAAYb,GAAW/D,EAA+B,KAAtB,cAAC,EAAI,CAACmD,KAAMA,IAElD,OACI,sBAAKzC,UAAU,aAAY,UACtBgE,EACAC,EACAC,EACD,sBAAKlE,UAAU,qBAAoB,UAC/B,oBAAGA,UAAU,oBAAmB,wCACD,uBAAK,4CAGpC,mBAAGA,UAAU,oBAAmB,mCAGhC,wBAAQA,UAAU,sBAAqB,SACnC,qBAAKA,UAAU,QAAQmE,QAASzE,KAAKgE,WAAW,sBAEpD,qBAAKzE,IAAKmF,EAASjF,IAAI,UAAUa,UAAU,qCAI1D,EArEW,CAASF,aAwEnBuE,EAAO,SAAH,GAAgB,IAAX5B,EAAI,EAAJA,KACHC,EAAiDD,EAAjDC,KAAMC,EAA2CF,EAA3CE,YAAaC,EAA8BH,EAA9BG,UAAWG,EAAmBN,EAAnBM,SAAUE,EAASR,EAATQ,KAE5CqB,EAAW,CAAC,UAAc,SAQ9B,MANkB,wEAAd1B,GACc,kEAAdA,IAEA0B,EAAW,CAAC,UAAc,YAI1B,sBAAKtE,UAAU,oBAAmB,UAClC,qBAAKf,IAAK2D,EAAWzD,IAAI,mBAAmBa,UAAU,kBAAkBrB,MAAO2F,IAC/E,sBAAKtE,UAAU,mBAAkB,UAC7B,mBAAGA,UAAU,mBAAkB,SAAE0C,IACjC,mBAAG1C,UAAU,oBAAmB,SAAE2C,IAClC,sBAAK3C,UAAU,mBAAkB,UAC7B,mBAAGC,KAAM8C,EAAU/C,UAAU,sBAAqB,SAC9C,qBAAKA,UAAU,QAAO,wBAE1B,mBAAGC,KAAMgD,EAAMjD,UAAU,2BAA0B,SAC/C,qBAAKA,UAAU,QAAO,8BAQ3BoD,I,QC6BAmB,G,MAlID,iKA2DT,OA3DS,oCACVlF,MAAQ,CACJmF,SAAU,GACVnB,SAAS,EACToB,iBAAiB,EACjBnF,OAAO,EACP4C,OAAQ,IACRwC,WAAW,GACd,EAEDpB,cAAgB,IAAIlC,EAAgB,EAMpCuD,UAAY,SAACzC,GACT,EAAK0C,oBACL,EAAKtB,cAActB,iBAAiBE,GAC/B4B,KAAK,EAAKe,kBACVd,MAAM,EAAKN,UACnB,EAEDmB,kBAAoB,WAChB,EAAKjF,SAAS,CACV8E,iBAAiB,KAExB,EAEDI,iBAAmB,SAACC,GAChB,IAAIC,GAAQ,EACRD,EAAc,IAAGC,GAAQ,GAE7B,EAAKpF,UAAS,gBAAG6E,EAAQ,EAARA,SAAUtC,EAAM,EAANA,OAAM,MAAQ,CACrCsC,SAAS,GAAD,mBAAMA,GAAQ,YAAKM,IAC3BzB,SAAS,EACToB,iBAAiB,EACjBvC,OAAQA,EAAS,EACjBwC,UAAWK,OAElB,EAEDtB,QAAU,WACN,EAAK9D,SAAS,CACVL,OAAO,EACP+D,SAAS,KAEhB,EAED2B,UAAY,GAAG,EAEfC,OAAS,SAACC,GACN,EAAKF,UAAUG,KAAKD,IACvB,EAEDE,YAAc,SAACC,GACX,EAAKL,UAAUM,SAAQ,SAAAC,GAAI,OAAIA,EAAKC,UAAUC,OAAO,0BACrD,EAAKT,UAAUK,GAAQG,UAAUE,IAAI,uBACrC,EAAKV,UAAUK,GAAQM,SAC1B,EAgEA,OAhEA,8CA/CD,WACIjG,KAAKiF,cACR,yBA+CD,SAAYiB,GAAM,IAAD,OACPzC,EAASyC,EAAIvD,KAAI,SAACkD,EAAMM,GAC1B,IAAIvB,EAAW,CAAC,UAAc,SAQ9B,MANuB,wEAAnBiB,EAAK3C,WACc,kEAAnB2C,EAAK3C,YAEL0B,EAAW,CAAC,UAAc,UAI1B,qBACIwB,SAAU,EACVZ,IAAK,EAAKD,OACVjF,UAAU,aAEV+F,WAAY,SAACC,GACK,UAAVA,EAAEC,MACF,EAAKrG,MAAMsG,eAAeX,EAAK/C,IAC/B,EAAK4C,YAAYS,KAGzB1B,QAAS,WACL,EAAKvE,MAAMsG,eAAeX,EAAK/C,IAC/B,EAAK4C,YAAYS,IACnB,UACE,qBAAK5G,IAAKsG,EAAK3C,UAAWzD,IAAKoG,EAAK7C,KAAM/D,MAAO2F,IACjD,qBAAKtE,UAAU,aAAY,SAAEuF,EAAK7C,SAZjC6C,EAAK/C,OAiBtB,OACI,oBAAIxC,UAAU,aAAY,SACrBmD,MAGZ,oBAED,WAAU,IAAD,OACL,EAAuEzD,KAAKL,MAArEmF,EAAQ,EAARA,SAAUnB,EAAO,EAAPA,QAAS/D,EAAK,EAALA,MAAOmF,EAAe,EAAfA,gBAAiBvC,EAAM,EAANA,OAAQwC,EAAS,EAATA,UAEpDvB,EAAQzD,KAAKyG,YAAY3B,GAEzBR,EAAe1E,EAAQ,cAAC,EAAY,IAAK,KACzC2E,EAAUZ,EAAU,cAAC,EAAO,IAAK,KACjCa,EAAYb,GAAW/D,EAAiB,KAAR6D,EAEtC,OACI,sBAAKnD,UAAU,aAAY,UACtBgE,EACAC,EACAC,EACD,wBACIlE,UAAU,mCACVoG,SAAU3B,EACV9F,MAAO,CAACC,QAAU8F,EAAY,OAAS,SACvCP,QAAS,kBAAM,EAAKQ,UAAUzC,IAAQ,SACtC,qBAAKlC,UAAU,QAAO,gCAIrC,EA3HS,CAASF,cCURuG,G,MAjBE,WACb,OACI,qCACI,mBAAGrG,UAAU,eAAc,0DAC3B,sBAAKA,UAAU,WAAU,UACrB,sBAAKA,UAAU,yBAAwB,UACnC,qBAAKA,UAAU,2BACf,qBAAKA,UAAU,4BAEnB,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,kCCHzBsG,G,MAAQ,iKAkDT,OAlDS,oCACVjH,MAAQ,CACJoD,KAAM,KACNY,SAAS,EACT/D,OAAO,GACV,EAEDgE,cAAgB,IAAIlC,EAAgB,EAEpCsC,WAAa,WACT,IAAQ6C,EAAW,EAAK3G,MAAhB2G,OAEHA,IAIL,EAAK/C,gBACL,EAAKF,cAAcf,aAAagE,GAC3BzC,KAAK,EAAKP,cACVQ,MAAM,EAAKN,WACnB,EAYDF,aAAe,SAACd,GACZ,EAAK9C,SAAS,CACV8C,OACAY,SAAS,KAEhB,EAEDG,cAAgB,WACZ,EAAK7D,SAAS,CACV0D,SAAS,KAEhB,EAEDI,QAAU,WACN,EAAK9D,SAAS,CACV0D,SAAS,EACT/D,OAAO,KAEd,EAkBA,OAlBA,8CA5BD,WACII,KAAKgE,eACR,gCAED,SAAmB8C,GACX9G,KAAKE,MAAM2G,SAAWC,EAAUD,QAChC7G,KAAKgE,eAEZ,oBAsBD,WACI,MAAiChE,KAAKL,MAA9BoD,EAAI,EAAJA,KAAMY,EAAO,EAAPA,QAAS/D,EAAK,EAALA,MAEjBmH,EAAWhE,GAAQY,GAAW/D,EAAQ,KAAO,cAAC,EAAQ,IACtD0E,EAAe1E,EAAQ,cAAC,EAAY,IAAM,KAC1C2E,EAAUZ,EAAU,cAAC,EAAO,IAAM,KAClCa,EAAYb,GAAW/D,IAAUmD,EAA8B,KAAtB,cAAC,EAAI,CAACA,KAAMA,IAE3D,OACI,sBAAKzC,UAAU,aAAY,UACtByG,EACAzC,EACAC,EACAC,SAGZ,EApES,CAASpE,cAuEjBuE,EAAO,SAAH,GAAgB,IAAX5B,EAAI,EAAJA,KACHC,EAAyDD,EAAzDC,KAAMC,EAAmDF,EAAnDE,YAAaC,EAAsCH,EAAtCG,UAAWG,EAA2BN,EAA3BM,SAAUE,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OAElDoB,EAAW,CAAC,UAAc,SAQ9B,MANkB,wEAAd1B,GACc,kEAAdA,IAEA0B,EAAW,CAAC,UAAc,YAI1B,qCACI,sBAAKtE,UAAU,eAAc,UACzB,qBAAKf,IAAK2D,EAAWzD,IAAKuD,EAAM/D,MAAO2F,IACvC,gCACI,qBAAKtE,UAAU,kBAAiB,SAAE0C,IAClC,sBAAK1C,UAAU,aAAY,UACvB,mBAAGC,KAAM8C,EAAU/C,UAAU,sBAAqB,SAC9C,qBAAKA,UAAU,QAAO,wBAE1B,mBAAGC,KAAMgD,EAAMjD,UAAU,2BAA0B,SAC/C,qBAAKA,UAAU,QAAO,6BAKtC,qBAAKA,UAAU,cAAa,SAAE2C,IAC9B,qBAAK3C,UAAU,eAAc,qBAC7B,qBAAIA,UAAU,oBAAmB,UAC5BkD,EAAOwD,OAAS,EAAI,KAAO,0CAExBxD,EAAOb,KAAI,SAACkD,EAAMM,GAEd,KAAIA,EAAI,GAER,OACI,oBAAI7F,UAAU,oBAAmB,SAC5BuF,EAAK7C,MAD6BmD,aAepDS,ICrIA,MAA0B,mCC4C1BK,EAlCN,iKASJ,OATI,oCACLtH,MAAQ,CACJuH,aAAc,MACjB,EAEDV,eAAiB,SAAC1D,GACd,EAAK7C,SAAS,CACViH,aAAcpE,KAErB,EAsBA,OAtBA,mCAED,WACI,OACI,sBAAKxC,UAAU,MAAK,UAChB,cAAC,EAAS,IACV,iCACI,cAAC,EAAa,UACV,cAAC,EAAU,MAEf,sBAAKA,UAAU,gBAAe,UAC1B,cAAC,EAAa,UACV,cAAC,EAAQ,CAACkG,eAAgBxG,KAAKwG,mBAEnC,cAAC,EAAa,UACV,cAAC,EAAQ,CAACK,OAAQ7G,KAAKL,MAAMuH,oBAGrC,qBAAK5G,UAAU,gBAAgBf,IAAK4H,EAAY1H,IAAI,qBAInE,EA/BI,CAASW,a,MCLlBgH,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,W","file":"static/js/main.6892a214.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt={'error'}/>\n    )\n}\n\nexport default ErrorMessage;","import { Component } from \"react/cjs/react.production.min\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log(error, errorInfo);\n        this.setState({\n            error: true\n        });\n    }\n\n    render() {\n        if (this.state.error) {\n            return <ErrorMessage />;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=67a79caa2e2acc912a2edf25bb515f26';\n    _baseOffset = 210;\n\n\n    getResource = async (url) => {\n        let res = await fetch(url);\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n\n        return await res.json();\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        \n        return res.data.results.map(this._transformCharacter);\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n\n        return this._transformCharacter(res.data.results[0]);\n    }\n\n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description || 'No description in the database...',\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react/cjs/react.production.min';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n        this.onCharLoading();\n        this.marvelService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.updateChar}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n    ) {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">{description}</p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    );\n}\n\nexport default RandomChar;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        newItemsLoading: false,\n        error: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemsLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList < 9) ended = true;\n\n        this.setState(({ charList, offset }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemsLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    itemsRefs = [];\n\n    setRef = (ref) => {\n        this.itemsRefs.push(ref);\n    }\n\n    focusOnItem = (number) => {\n        this.itemsRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemsRefs[number].classList.add('char__item_selected');\n        this.itemsRefs[number].focus();\n    }\n\n    renderItems(arr) {\n        const items =  arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (\n                item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \n                item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n            ) {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    tabIndex={0}\n                    ref={this.setRef}\n                    className=\"char__item\"\n                    key={item.id}\n                    onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n                    }}>    \n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, newItemsLoading, offset, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemsLoading}\n                    style={{display : charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react/cjs/react.production.min';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n\n    marvelService = new MarvelService();\n\n    updateChar = () => {\n        const { charId } = this.props;\n\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n        this.marvelService.getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (\n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || \n        thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'\n    ) {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There are no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if (i > 9) return;\n\n                        return (\n                            <li className=\"char__comics-item\" key={i}>\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react/cjs/react.production.min\";\n\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}