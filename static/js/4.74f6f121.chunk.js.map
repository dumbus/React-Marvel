{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","hooks/http.hook.js","services/MarvelService.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemsLoading","setNewItemsLoading","setOffset","comicsEnded","setComicsEnded","console","log","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage"],"mappings":"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","file":"static/js/4.74f6f121.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt={'error'}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useCallback } from 'react';\r\n\r\nconst useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n};\r\n\r\nexport default useHttp;","import useHttp from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=67a79caa2e2acc912a2edf25bb515f26';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        \r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n\t\treturn _transformComics(res.data.results[0]);\r\n    }\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description || 'No description',\r\n            thumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'No description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about page count',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'Not available'\r\n\t\t}\r\n    }\r\n\r\n    return {\r\n        loading,\r\n        error,\r\n        getAllCharacters,\r\n        getCharacter,\r\n        getAllComics,\r\n        getComic,\r\n        clearError\r\n    };\r\n}\r\n\r\nexport default useMarvelService;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const { loading, error, getAllComics } = useMarvelService();\r\n\r\n    console.log('comicslist');\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, []);\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true);\r\n        getAllComics(offset).then(onComicsListLoaded)\r\n    };\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) ended = true;\r\n\r\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\r\n        setNewItemsLoading(newItemsLoading => false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(comicsEnded => ended);\r\n    };\r\n\r\n    function renderItems(arr) {\r\n        const items =  arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    };\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading && !newItemsLoading ? <Spinner/> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemsLoading}\r\n                style={{display : comicsEnded ? 'none' : 'block'}}\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}